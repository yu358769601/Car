1:一个布局文件里第一个EditText将默认获得焦点，如果想让其默认不获得焦点，则：

可以在EditText前面放置一个看不到的LinearLayout，让它率先获取焦点：
<LinearLayout
        android:focusable="true"
   android:focusableInTouchMode="true"
        android:layout_width="0px"
   android:layout_height="0px"/>

或者，让EditText之前的控件先获得焦点，都行

-------------------------------------------------------------------------------------------------------

2.小键盘出来点击外面小键盘消失
//点击输入框 小键盘出来点击外面小键盘消失
  @Override
    public boolean dispatchTouchEvent(MotionEvent ev) {
        if (ev.getAction() == MotionEvent.ACTION_DOWN) {
            View v = getCurrentFocus();
            if (isShouldHideInput(v, ev)) {

                InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE);
                if (imm != null) {
                    imm.hideSoftInputFromWindow(v.getWindowToken(), 0);
                }
            }
            return super.dispatchTouchEvent(ev);
        }
        // 必不可少，否则所有的组件都不会有TouchEvent了
        if (getWindow().superDispatchTouchEvent(ev)) {
            return true;
        }
        return onTouchEvent(ev);
    }

    public  boolean isShouldHideInput(View v, MotionEvent event) {
        if (v != null && (v instanceof EditText)) {
            int[] leftTop = { 0, 0 };
            //获取输入框当前的location位置
            v.getLocationInWindow(leftTop);
            int left = leftTop[0];
            int top = leftTop[1];
            int bottom = top + v.getHeight();
            int right = left + v.getWidth();
            if (event.getRawX() > left && event.getRawX() < right
                    && event.getRawY() > top && event.getRawY() < bottom) {
                // 点击的是输入框区域，保留点击EditText的事件
                return false;
            } else {
                return true;
            }
        }
        return false;
    }

-------------------------------------------------------------------------------------------------------

